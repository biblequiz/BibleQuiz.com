---
const {
    title,
    eventId,
    eventType,
    eventDates,
    eventScope,
    eventScopeLabel,
    eventLocation,
    eventIsLoaded,
    hidePageTitle,
    hidePageTitleOnPrint,
} = Astro.locals.starlightRoute.entry.data;

import ExcelExportButton from "./scores/ExcelExportButton.astro";
import PrintDialogButton from "./scores/PrintDialogButton.astro";
import ToggleFavoritesOnlyButton from "./scores/ToggleFavoritesOnlyButton";
import EventScopeBadge from "./EventScopeBadge";
---

{
    !hidePageTitle && (
        <h1
            id="_top"
            class={`page-title ${hidePageTitleOnPrint ? "hide-on-print" : ""}`}
        >
            {eventType && (
                <img
                    src={`/assets/logos/${eventType}/${eventType}-logo.png`}
                    alt={eventType}
                    width="72"
                    height="72"
                    class="event-icon"
                />
            )}
            <span class="event-title-text">{title}</span>
            {eventType && eventId && (
                <span>
                    <PrintDialogButton isLoaded={eventIsLoaded ?? false} />
                    <ExcelExportButton isLoaded={eventIsLoaded ?? false} />
                    <ToggleFavoritesOnlyButton
                        isLoaded={eventIsLoaded ?? false}
                        client:only="react"
                    />
                </span>
            )}
        </h1>
    )
}
{
    !hidePageTitle && (eventScope || eventDates || eventLocation) && (
        <div class={`mt-0 ${hidePageTitleOnPrint ? "hide-on-print" : ""}`}>
            {eventScope && (
                <EventScopeBadge scope={eventScope} label={eventScopeLabel} />
            )}
            {(eventDates || eventLocation) && (
                <i>
                    {eventDates} @ {eventLocation}
                </i>
            )}
        </div>
    )
}

